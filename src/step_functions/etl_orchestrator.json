{
  "Comment": "Production Lakehouse ETL with Multi-Format Support and Validation",
  "StartAt": "FileFormatDetectionAndValidation",
  "States": {
    "FileFormatDetectionAndValidation": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "lakehouse-file-processor",
        "Payload.$": "$"
      },
      "Next": "CheckValidationResult",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ValidationFailureNotification",
          "ResultPath": "$.error"
        }
      ]
    },
    "CheckValidationResult": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Payload.body",
          "StringMatches": "*validation_failed*",
          "Next": "ValidationFailureNotification"
        },
        {
          "Variable": "$.Payload.body",
          "StringMatches": "*ready_for_processing*",
          "Next": "ParseProcessingResult"
        }
      ],
      "Default": "ValidationFailureNotification"
    },
    "ParseProcessingResult": {
      "Type": "Pass",
      "Parameters": {
        "processing_info.$": "States.StringToJson($.Payload.body)"
      },
      "Next": "DetermineETLStrategy"
    },
    "DetermineETLStrategy": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.processing_info.glue_jobs[0]",
          "StringEquals": "lakehouse-orders-etl",
          "Next": "ProcessOrders"
        },
        {
          "Variable": "$.processing_info.glue_jobs[0]",
          "StringEquals": "lakehouse-products-etl",
          "Next": "ProcessProducts"
        },
        {
          "Variable": "$.processing_info.glue_jobs[0]",
          "StringEquals": "lakehouse-order-items-etl",
          "Next": "ProcessOrderItems"
        }
      ],
      "Default": "ProcessAllDatasets"
    },
    "ProcessOrders": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "lakehouse-orders-etl",
        "Arguments": {
          "--processed_files.$": "$.processing_info.processed_files"
        }
      },
      "Next": "UpdateCatalogAndValidate",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "ETLFailureNotification"
        }
      ]
    },
    "ProcessProducts": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "lakehouse-products-etl"
      },
      "Next": "UpdateCatalogAndValidate",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        }
      ]
    },
    "ProcessOrderItems": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "lakehouse-order-items-etl"
      },
      "Next": "UpdateCatalogAndValidate",
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "IntervalSeconds": 30,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        }
      ]
    },
    "ProcessAllDatasets": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "ProcessOrdersParallel",
          "States": {
            "ProcessOrdersParallel": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "lakehouse-orders-etl"
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "ProcessProductsParallel",
          "States": {
            "ProcessProductsParallel": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "lakehouse-products-etl"
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "ProcessOrderItemsParallel",
          "States": {
            "ProcessOrderItemsParallel": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "lakehouse-order-items-etl"
              },
              "End": true
            }
          }
        }
      ],
      "Next": "UpdateCatalogAndValidate"
    },
    "UpdateCatalogAndValidate": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startCrawler",
      "Parameters": {
        "Name": "lakehouse-catalog-crawler"
      },
      "Next": "ValidateWithAthena"
    },
    "ValidateWithAthena": {
      "Type": "Task",
      "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
      "Parameters": {
        "QueryString": "SELECT 'orders' as table_name, COUNT(*) as record_count FROM lakehouse_ecommerce_db.orders UNION ALL SELECT 'products' as table_name, COUNT(*) as record_count FROM lakehouse_ecommerce_db.products UNION ALL SELECT 'order_items' as table_name, COUNT(*) as record_count FROM lakehouse_ecommerce_db.order_items",
        "ResultConfiguration": {
          "OutputLocation": "s3://lakehouse-processed-dev/athena-results/"
        }
      },
      "Next": "ArchiveProcessedFiles"
    },
    "ArchiveProcessedFiles": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "lakehouse-file-archiver",
        "Payload.$": "$"
      },
      "Next": "SuccessNotification"
    },
    "SuccessNotification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "arn:aws:sns:us-east-1:ACCOUNT:lakehouse-notifications",
        "Message": "‚úÖ Lakehouse ETL pipeline completed successfully with multi-format support"
      },
      "End": true
    },
    "ValidationFailureNotification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "arn:aws:sns:us-east-1:ACCOUNT:lakehouse-notifications",
        "Message.$": "States.Format('‚ùå File validation failed: {}', $.error.Cause)"
      },
      "End": true
    },
    "ETLFailureNotification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "arn:aws:sns:us-east-1:ACCOUNT:lakehouse-notifications",
        "Message": "üí• Lakehouse ETL pipeline failed during processing"
      },
      "End": true
    }
  }
}
